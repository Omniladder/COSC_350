library(shiny); runApp('CIapp.R')
knitr::opts_chunk$set(echo = TRUE)
confidence_Coefficient <- c(.85,.90,.95,.99)
aveage_Width <- c(.46,.4,.63,.64)
confidence_Intervals <- c(.88, .91, .93, .93)
confidence_Coefficient <- c(.85,.90,.95,.99)
aveage_Width <- c(.46,.4,.63,.64)
confidence_Intervals <- c(.88, .91, .93, .93)
confidence_Coefficient <- c(.85,.90,.95,.99)
aveage_Width <- c(.46,.4,.63,.64)
confidence_Intervals <- c(.88, .91, .93, .93)
CI_table_90_normal <- data.frame(Sample_Size, Num_Cover, CI_width)
confidence_Coefficient <- c(.85,.90,.95,.99)
aveage_Width <- c(.46,.4,.63,.64)
confidence_Intervals <- c(.88, .91, .93, .93)
CI_table_90_normal <- data.frame(confidence_Coefficient, aveage_Width, confidence_Intervals)
CI_table_90_normal
runApp('CIapp.R')
library(shiny); runApp('CIapp.R')
knitr::opts_chunk$set(echo = TRUE)
Sample_Size <- c(10,40,90, 160, 250)
confidence_Proportion <- c(10,40,90, 160, 250)
Sample_Size <- c(10,40,90, 160, 250)
confidence_Proportion <- c(.96, .96,.97,.96, .93)
Sample_Size <- c(10,40,90, 160, 250)
confidence_Proportion <- c(.96, .96,.97,.96, .93)
avg_Width <- c(1.37, .64, .41, .31, .25)
Sample_Size <- c(10,40,90, 160, 250)
confidence_Proportion <- c(.96, .96,.97,.96, .93)
avg_Width <- c(1.37, .64, .41, .31, .25)
CI_table_90_normal <- data.frame(Sample_Size , confidence_Proportion, avg_Width)
CI_table_90_normal
library(shiny); runApp('CIapp.R')
knitr::opts_chunk$set(echo = TRUE)
Sample_Size <- c(10,40,90)
Num_Cover <- c(89,91,93)
CI_width <- c(1.042, 0.522, 0.348)
Sample_Size <- c(10,40,90)
Num_Cover <- c(89,91,93)
CI_width <- c(1.042, 0.522, 0.348)
CI_table_90_normal <- data.frame(Sample_Size, Num_Cover, CI_width)
CI_table_90_normal
colnames(CI_table_90_normal)<-c("Sample Size", "Num of CIs Covering True Mean", "Ave Width of CIs")
CI_table_90_normal
library(knitr)
kable(CI_table_90_normal,padding=6,align="ccc",caption="90% CI stats based on 100 random samples from a normal population")
confidence_Coefficient <- c(.85,.90,.95,.99)
aveage_Width <- c(.46,.4,.63,.64)
confidence_Intervals <- c(.88, .91, .93, .93)
CI_table_90_normal <- data.frame(confidence_Coefficient, aveage_Width, confidence_Intervals)
CI_table_90_normal
Sample_Size <- c(10,40,90, 160, 250)
confidence_Proportion <- c(.96, .96,.97,.96, .93)
avg_Width <- c(1.37, .64, .41, .31, .25)
CI_table_90_normal <- data.frame(Sample_Size , confidence_Proportion, avg_Width)
CI_table_90_normal
Parent_distribution <- c("NORMAL","UNIFORM","RIGHT SKEWED", "LEFT SKEWED", "BIMODAL", "CAUNCHY")
numonLeft <- c(14, 14, 20, 8, 14, 20)
numonRight <- c(11, 10, 9, 14, 7, 4)
CI_table <- data.frame(Parent_distribution , numonLeft, numonRight)
CI_table
CI_data <- function(data, PopSDknown, PopSDvalue, ConfCoef, digit ){
# data should be a column of numeric data
# PopSDknown should be "Yes" or "No", whether the Population standard deviation is known or not.
# PopSDvalue should be the value of the pop sd value. If pop sd is NOT known, just input 0.
# ConfCoef is the confidence coefficient, should be a real number between 0 and 1.
# digit is the number of digits you want to present in the CI
x_bar <- mean(data)
n <- length(data)
confLv <- ConfCoef*100
if (PopSDknown == "Yes"){
crval <- qnorm((1+ConfCoef)/2)
SD <- PopSDvalue
output1 <- paste("The population standard deviation is", bquote(.(PopSDvalue)))
}
else if (PopSDknown == "No"){
crval = qt((1+ConfCoef)/2,n-1)
SD <- sd(data)
output1 <- paste("The population standard deviation is unknown.")
}
ci_ub <- round(x_bar + crval*SD/sqrt(n),digit)
ci_lb <- round(x_bar - crval*SD/sqrt(n),digit)
cat(output1,"\nThe sample size is", bquote(.(n)), ". The sample mean is", bquote(.(x_bar)), ". The sample standard deviation is", bquote(.(sd(data))),"\nThe", bquote(.(confLv)), "% Confidence Interval for the population mean is (", bquote(.(ci_lb)), bquote(.(ci_ub)), ").\n" )
}
x <- rnorm(100,5,3)
CI_data(x,"No",0,0.95,4)
CI_data(x,"Yes",3,0.95,4)
CI_stat <- function(x_bar,n, PopSDknown, SD, ConfCoef, digit ){
# x_bar is the sample mean
# n is the sample size
# PopSDknown should be "Yes" or "No", whether the Population standard deviation is known or not
# SD is the pop sd or sample sd, depends on the input of PopSDknown
# ConfCoef is the confidence coefficient, should be a real number between 0 and 1.
# digit is the number of digits you want to present in the CI
confLv <- ConfCoef*100
if (PopSDknown == "Yes"){
crval <- qnorm((1+ConfCoef)/2)
output1 <- paste("The population standard deviation is", bquote(.(SD)))
}
else if (PopSDknown == "No"){
crval = qt((1+ConfCoef)/2,n-1)
output1 <- paste("The population standard deviation is unknown.")
}
ci_ub <- round(x_bar + crval*SD/sqrt(n),digit)
ci_lb <- round(x_bar - crval*SD/sqrt(n),digit)
cat(output1,"\nThe sample size is", bquote(.(n)), ". The sample mean is", bquote(.(x_bar)), ". The sample standard deviation is", bquote(.(SD)),"\nThe", bquote(.(confLv)), "% Confidence Interval for the population mean is (", bquote(.(ci_lb)), bquote(.(ci_ub)), ").\n" )
}
CI_stat(4.711773,100,"Yes",3,0.95,4)
